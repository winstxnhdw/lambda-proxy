name: Deploy

on:
  workflow_dispatch:
  push:
    branches: main
    paths:
      - src/**
      - .github/workflows/main.yml
      - Cargo.toml
      - Cargo.lock

permissions:
  id-token: write

env:
  LAMBDA_FUNCTION_NAME: ${{ vars.LAMBDA_FUNCTION_NAME }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Lint
        run: cargo clippy

      - name: Test
        run: cargo test

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-lambda
        run: pip install cargo-lambda

      - name: Build
        run: cargo lambda build --release --output-format zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.LAMBDA_FUNCTION_NAME }}
          path: target/lambda/${{ env.LAMBDA_FUNCTION_NAME }}/bootstrap.zip

  deploy:
    needs: [test, build]
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download artifact
        uses: actions/download-artifact@v6
        with:
          name: ${{ env.LAMBDA_FUNCTION_NAME }}

      - name: Deploy to AWS
        run: aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --zip-file=fileb://bootstrap.zip
